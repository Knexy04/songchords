name: SongChords CI/CD

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        app: [api, bot]

    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'songchords/${{ matrix.app }}/package-lock.json'
      
      - name: Install dependencies
        run: cd songchords/${{ matrix.app }} && npm ci
      
      - name: Build
        run: cd songchords/${{ matrix.app }} && npm run build
      
      - name: Test
        run: cd songchords/${{ matrix.app }} && npm test
        continue-on-error: ${{ matrix.app == 'api' }}

  docker-build-push:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    strategy:
      matrix:
        app: [api, bot]
        
    steps:
      - uses: actions/checkout@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./songchords/${{ matrix.app }}
          file: ./songchords/${{ matrix.app }}/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/songchords-${{ matrix.app }}:latest 
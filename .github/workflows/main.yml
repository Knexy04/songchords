name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'

    - name: Pull changes
      run: git pull
        
    - name: Install API dependencies
      working-directory: ./api
      run: npm ci
        
    - name: Test API
      working-directory: ./api
      run: npm test
      
    - name: Install Bot dependencies
      working-directory: ./bot
      run: npm ci
        
    - name: Test Bot
      working-directory: ./bot
      run: npm test

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
        
    - name: Build and push API Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./api
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/songchords-api:latest
        
    - name: Build and push Bot Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./bot
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/songchords-bot:latest
        
    - name: Deploy to server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd ~/songchords
          git pull
          docker-compose pull
          docker-compose down
          docker-compose up -d

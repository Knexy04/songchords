name: Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies for API
      run: |
        cd api
        npm ci

    - name: Build API
      run: |
        cd api
        npm run build

    - name: Test API
      run: |
        cd api
        npm test

    - name: Install dependencies for Bot
      run: |
        cd bot
        npm ci

    - name: Build Bot
      run: |
        cd bot
        npm run build

    - name: Test Bot
      run: |
        cd bot
        npm test

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
        
    - name: Build and push API
      uses: docker/build-push-action@v4
      with:
        context: ./api
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/songchords-api:latest
        
    - name: Build and push Bot
      uses: docker/build-push-action@v4
      with:
        context: ./bot
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/songchords-bot:latest
        
    - name: Deploy to server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd songchords
          docker-compose pull
          docker-compose up -d